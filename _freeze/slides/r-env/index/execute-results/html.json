{
  "hash": "b8376874d32683a7d7dc72fddc73394c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"renv: Project environments in R\"\nauthor: \"Roy Francis\"\nimage: \"assets/featured.jpg\"\nformat: revealjs\n---\n\n\n## Packages {visibility=\"hidden\"}\n\n\n::: {.cell}\n\n:::\n\n\n## Background\n\nUnable to reproduce the same results when\n\n. . .\n\n- Rerunning old code\n- Sharing your code with others\n\n. . .\n\n> renv is a toolkit to manage project-specific libraries of R packages\n\n## Terminology\n\n**R package**  \n- A standardized collection of R code, data or documentation\n- How you use someone else's code\n- `installed.packages()`\n\n**R library**  \n- A directory that holds R packages\n- Where you store packages\n- `.libPaths()`\n\n**R repository**  \n- A server that hosts R packages for distribution\n- Where you get packages from\n- `getOption(\"repos\")`\n\n## Project lifespan\n\n- Where did I get my package from? What's my **repository**?\n- Where is my package stored? Where is my **package library**?\n- What **version** of the package did I use?\n\n## What can renv do?\n\n**Isolate projects**  \n- Each project gets it's own **library**\n- You can use different versions of a library in different projects\n\n**Reproducible**  \n- Record exact **version** of each package\n\n**Portable**\n- Others can retore your project libraries with the same exact versions\n- And from the same **repository** as you did\n\n## Project timeline\n\n::: {.columns}\n::: {.column}\nData -> \n:::\n::: {.column}\ndplyr -> \n:::\n::: {.column}\ndplyr -> \ntidyr\n:::\n::: {.column}\ndplyr -> \ntidyr\nggplot2\n:::\n::: {.column}\ndplyr -> \n~~tidyr~~\nggplot2\nshiny\n:::\n:::\n\n## Snapshot\n\n## renv.lock anatomy\n\n::: {.columns}\n::: {.column}\n\n```\n{\n  \"R\": {\n    \"Version\": \"4.3.2\",\n    \"Repositories\": [\n      {\n        \"Name\": \"CRAN\",\n        \"URL\": \"https://p3m.dev/cran/latest\"\n      }\n    ]\n  },\n  \"Bioconductor\": {\n    \"Version\": \"3.18\"\n  },\n  \"remotes\": {\n    \"Package\": \"remotes\",\n    \"Version\": \"2.4.2.1\",\n    \"Source\": \"Repository\",\n    \"Repository\": \"RSPM\",\n    \"Requirements\": [\n      \"R\",\n      \"methods\",\n      \"stats\",\n      \"tools\",\n      \"utils\"\n    ],\n    \"Hash\": \"63d15047eb239f95160112bcadc4fcb9\"\n  },\n```\n\n:::\n::: {.column}\nR version\nActive R repositories\nR packages recorded by project\n:::\n:::\n\n## Package level metadata\n\n::: {.columns}\n::: {.column}\n\n```\n\"remotes\": {\n  \"Package\": \"remotes\",\n  \"Version\": \"2.4.2.1\",\n  \"Source\": \"Repository\",\n  \"Repository\": \"RSPM\",\n  \"Requirements\": [\n    \"R\",\n    \"methods\",\n    \"stats\",\n    \"tools\",\n    \"utils\"\n  ],\n  \"Hash\": \"63d15047eb239f95160112bcadc4fcb9\"\n}\n```\n\n:::\n::: {.column}\n\n- Package: Package name\n- Version: Package version\n- Source: Location from where package was trieved\n- Repository: Name of repository\n- Hash: Unique hash for this package\n\n:::\n:::\n\n## renv workflow\n\n1. Initialize\n2. Write code install packages\n3. Snapshot environment\n4. Repeat 2 & 3\n5. Restore environment if needed\n\n## Snapshot\n\nImplicit snapshotting\nrenv::dependencies()\n\n## Status\n\n## Tracking renv.lock\n\nrenv::history()\n\n## Restoring library\n\n- Will not modify R version\n\n## Global package cache\n\n## renv without project library\n\n- Snapshot all packages used in a project\n\n`renv::snapshot()`\n\n- Snapshot all packages in current library\n\n`renv::snapshot(type=\"all\")`\n\n- Restore into system library\n\n`renv::restore()`\n\n- Disable global cache\n\n`renv::settings$use.cache(FALSE)`\n\n## Reproducibility puzzle\n\n\n## Review\n\nrenv::init()\nrenv::snapshot()\nrenv::restore()\n\nrenv::status()\nrenv::dependencies()\nrenv::history()\nrenv::revert()\n\n## Acknowledgements\n\n- [renv documentation](https://rstudio.github.io/renv/index.html)\n- [Project environments for R](https://www.youtube.com/watch?v=yjlEbIDevOs): Kevin Ushey, RStudio::Conf 2020\n- [Reproducible environments with renv](https://www.youtube.com/watch?v=7lCOjGrwclQ): Ryan Johnson, NHS-R community 2023\n\n##  {background-image=\"/assets/images/cover.jpg\"}\n\n### Thank you! Questions?\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n         _                  \nplatform x86_64-pc-linux-gnu\nos       linux-gnu          \nmajor    4                  \nminor    3.2                \n```\n\n\n:::\n:::\n\n\n[{{< meta current_year >}} • [SciLifeLab](https://www.scilifelab.se/) • [NBIS](https://nbis.se/) • [RaukR](https://nbisweden.github.io/raukr-2024)]{.smaller}",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}